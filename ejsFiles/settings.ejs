<!DOCTYPE html>
<html>
	<head>
		<title>Settings - InfiniMii</title>
		<link rel="stylesheet" href="./global.css">
        <link rel="stylesheet" href="utilityPages.css">
	</head>
	<body>
		<%- partials.header %>
		<%- partials.accountDisplay %>
		<div class="content">
			<%- partials.sidebar %>
			<div class="settings-container">
				<fieldset>
					<legend>Profile Settings</legend>
					
					<!-- Change Profile Picture -->
					<div class="setting-group">
						<label>Profile Picture (Mii ID)</label>
						<input type="text" placeholder="Mii ID for new Profile Picture" id="pfpId">
						<button onclick="changePfp()">Change Profile Picture</button>
					</div>

					<!-- Change Username -->
					<div class="setting-group">
						<label>Username</label>
						<input type="text" placeholder="New Username" id="nUser">
						<button onclick="changeUser()">Change Username</button>
					</div>
				</fieldset>

				<fieldset>
					<legend>Account Settings</legend>

					<!-- Change Email -->
					<div class="setting-group">
						<label>Email Address</label>
						<input type="email" placeholder="Old Email" id="oEmail">
						<input type="email" placeholder="New Email" id="nEmail">
						<button onclick="changeEmail()">Change Email</button>
					</div>
					
					<!-- Change Password -->
					<div class="setting-group">
						<label>Password</label>
						<input type="password" placeholder="Old Password" id="oPass">
						<input type="password" placeholder="New Password" id="nPass">
						<button onclick="changePassword()">Change Password</button>
					</div>
				</fieldset>

				<fieldset class="danger-zone">
					<legend>‚ö†Ô∏è Danger Zone</legend>

					<!-- Delete All Miis -->
					<div class="setting-group">
						<label>Delete All Your Miis</label>
						<p class="warning-text">This will permanently delete ALL Miis you have uploaded. This action cannot be undone!</p>
						<button class="danger-btn" onclick="deleteAllMiis()">üóëÔ∏è Delete All My Miis</button>
					</div>

					<!-- Delete Account -->
					<div class="setting-group">
						<label>Delete Account</label>
						<p class="warning-text">This will permanently delete your account. Your Miis will remain on the site but will be attributed to "[Deleted User]". This action cannot be undone!</p>
						<input type="password" placeholder="Enter Password to Confirm" id="deleteAccountPassword">
						<button class="danger-btn" onclick="deleteAccount()">‚õî Delete Account</button>
					</div>
				</fieldset>
			</div>

            <%- partials.featuredMiis %>
		</div>
		<%- partials.footer %>
		<script src="global.js"></script>
		<script>
			async function changePfp() {
				const pfpId = document.getElementById('pfpId').value;
				if (!pfpId) {
					alert('Please enter a Mii ID');
					return;
				}

				try {
					const response = await fetch(`/changePfp?id=${encodeURIComponent(pfpId)}`);
					const result = await response.json();
					
					if (result.okay) {
						alert('Profile picture changed successfully!');
						location.reload();
					} else {
						alert(result.msg || 'Error changing profile picture');
					}
				} catch (error) {
					console.error('Error:', error);
					alert('Failed to change profile picture');
				}
			}

			async function changeUser() {
				const newUser = document.getElementById('nUser').value;
				if (!newUser) {
					alert('Please enter a new username');
					return;
				}

				const confirmed = confirm(`Are you sure you want to change your username to "${newUser}"?`);
				if (!confirmed) return;

				try {
					const response = await fetch(`/changeUser?newUser=${encodeURIComponent(newUser)}`);
					const result = await response.json();
					
					if (result.okay) {
						alert('Username changed successfully! Please log in again.');
						window.location.href = '/login';
					} else {
						alert(result.msg || 'Error changing username');
					}
				} catch (error) {
					console.error('Error:', error);
					alert('Failed to change username');
				}
			}

			async function changeEmail() {
				const oldEmail = document.getElementById('oEmail').value;
				const newEmail = document.getElementById('nEmail').value;

				if (!oldEmail || !newEmail) {
					alert('Please fill in both old and new email');
					return;
				}

				try {
					const response = await fetch('/changeEmail', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify({ oldEmail, newEmail })
					});

					const result = await response.json();
					
					if (result.okay) {
						alert('Email changed successfully!');
						document.getElementById('oEmail').value = '';
						document.getElementById('nEmail').value = '';
					} else {
						alert(result.msg || 'Error changing email');
					}
				} catch (error) {
					console.error('Error:', error);
					alert('Failed to change email');
				}
			}

			async function changePassword() {
				const oldPass = document.getElementById('oPass').value;
				const newPass = document.getElementById('nPass').value;

				if (!oldPass || !newPass) {
					alert('Please fill in both old and new password');
					return;
				}

				if (newPass.length < 6) {
					alert('New password must be at least 6 characters');
					return;
				}

				try {
					const response = await fetch('/changePassword', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify({ oldPassword: oldPass, newPassword: newPass })
					});

					const result = await response.json();
					
					if (result.okay) {
						alert('Password changed successfully!');
						document.getElementById('oPass').value = '';
						document.getElementById('nPass').value = '';
					} else {
						alert(result.msg || 'Error changing password');
					}
				} catch (error) {
					console.error('Error:', error);
					alert('Failed to change password');
				}
			}

			async function deleteAllMiis() {
				const confirmed = confirm('‚ö†Ô∏è WARNING ‚ö†Ô∏è\n\nAre you ABSOLUTELY SURE you want to DELETE ALL YOUR MIIS?\n\nThis action CANNOT be undone!');
				if (!confirmed) return;

				const doubleCheck = prompt('Type "DELETE ALL" to confirm:');
				if (doubleCheck !== 'DELETE ALL') {
					alert('Deletion cancelled.');
					return;
				}

				try {
					const response = await fetch('/deleteAllMyMiis', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' }
					});

					const result = await response.json();
					
					if (result.okay) {
						alert(`Successfully deleted ${result.deletedCount} Miis`);
						location.reload();
					} else {
						alert(result.msg || 'Error deleting Miis');
					}
				} catch (error) {
					console.error('Error:', error);
					alert('Failed to delete Miis');
				}
			}

			async function deleteAccount() {
				const password = document.getElementById('deleteAccountPassword').value;

				if (!password) {
					alert('Please enter your password to confirm account deletion');
					return;
				}

				const confirmed = confirm('‚ö†Ô∏è FINAL WARNING ‚ö†Ô∏è\n\nAre you ABSOLUTELY SURE you want to DELETE YOUR ACCOUNT?\n\nYour Miis will remain on the site but will be attributed to "[Deleted User]".\n\nThis action CANNOT be undone!');
				if (!confirmed) return;

				const tripleCheck = prompt('Type "DELETE MY ACCOUNT" to confirm:');
				if (tripleCheck !== 'DELETE MY ACCOUNT') {
					alert('Account deletion cancelled.');
					return;
				}

				try {
					const response = await fetch('/deleteAccount', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify({ password })
					});

					const result = await response.json();
					
					if (result.okay) {
						alert('Account deleted successfully. Goodbye!');
						window.location.href = '/';
					} else {
						alert(result.msg || 'Error deleting account');
					}
				} catch (error) {
					console.error('Error:', error);
					alert('Failed to delete account');
				}
			}
		</script>
	</body>
</html>